spring:
    servlet:
        multipart:
            enabled: true          #默认支持文件上传
            max-file-size: 200MB    # 最大支持文件大小
            max-request-size: 200MB # 最大支持请求大小

server:
  port: 80
    # datasource:
    #     username: sa
    #     url: jdbc:h2:file:~/OneDrive/ether/ether;DB_CLOSE_ON_EXIT=TRUE;AUTO_SERVER=TRUE
    #     driver-class-name: org.h2.Driver
    #     hikari:
    #         minimum-idle: 10        # 最小空闲连接数。连接池中保持的最小空闲连接数。
    #         maximum-pool-size: 50   # 最大连接池大小。连接池中允许的最大连接数。
    #         idle-timeout: 600000    # 空闲连接超时时间（毫秒）。连接在空闲超过此时间后将被移除。
    #         pool-name: HikariCP     # 连接池的名称。
    #         max-lifetime: 1800000   # 连接最大存活时间（毫秒）。连接在存活超过此时间后将被关闭和重新l创建。
    #         connection-timeout: 30000 # 连接超时时间（毫秒）。获取连接时的超时时间。
    #         leak-detection-threshold: 2000 # 泄漏检测阈值（毫秒）。连接泄漏检测的时间阈值。
    #         validation-timeout: 5000 # 验证超时时间（毫秒）。连接验证的超时时间。
    #         connection-test-query: SELECT 1 # 连接测试查询。用于测试连接是否有效的SQL查询。
    #         keepalive-time: 60000 # 保持连接存活时间（毫秒）。连接在空闲超过此时间后将被发送一个测试查询。
    # h2:
    #     console:
    #         enabled: true
    #         path: /h2-console
    # jpa:
    #     database-platform: org.hibernate.dialect.MySQL57Dialect
        
workspace:
    path: d:/project/ether/workspace

docker:
    host: 192.168.241.128
    port: 2379

harbor:
    host: hub.centit.com
    username: operator
    password: 0pC3ntit.!
        
management:
    endpoints:
        web:
            base-path: 
            path-mapping:
                health: /healthz
            exposure:
                include: health, metrics, prometheus
    endpoint:
        health:
            show-details: always
            show-components: always
            probes:
                enabled: true 
    metrics:
        enable:
            jvm: true
            system: true
            tags:
                enabled: true
        export:
            prometheus:
                enabled: true
    